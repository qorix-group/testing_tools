[project]
name = "testing-utils"
version = "0.2.8"
dependencies = ["pytest==8.4.1", "pytest-html==4.1.1", "pytest-repeat==0.9.4"]
requires-python = ">=3.12"
authors = [
    { name = "Igor Ostrowski", email = "igor.ostrowski.ext@qorix.ai" },
    { name = "Piotr Korkus", email = "piotr.korkus.ext@qorix.ai" },
    { name = "Arkadiusz JÄ™drzejewski", email = "arkadiusz.jedrzejewski.ext@qorix.ai" },
]
description = "Test framework tools and helpers for performance stack project."
readme = "README.md"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["testing_utils", "testing_utils.net"]

[project.optional-dependencies]
dev = ["ruff"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

line-length = 120
indent-width = 4

[tool.ruff.lint]
select = [
    # flake8-boolean-trap
    "FBT",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-fixme
    "FIX",
    # flake8-implicit-str-concat
    "ISC",
    # flake8-pie
    "PIE",
    # flake8-print
    "T20",
    # flake8-pytest-style
    "PT",
    # flake8-raise
    "RSE",
    # flake8-return
    "RET501",
    "RET502",
    "RET503",
    "RET504",
    # flake8-self
    "SLF",
    # flake8-simplify
    "SIM",
    # flake8-type-checking
    "TC",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",

    # isort
    "I",

    # pycodestyle error
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
]
ignore = ["F401", "PTH123", "ARG002"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
